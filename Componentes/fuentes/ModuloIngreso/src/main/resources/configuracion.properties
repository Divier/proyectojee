#-------------------------------------------------------------------------
# Archivo de configuracion para el modulo jaas personalizado Circulemos 2
#-------------------------------------------------------------------------
#Nombre JNDI del datasource que se encuentra en el servidor de aplicaciones
nombre_datasource=java:jboss/datasources/SeguridadDS
# Consulta que obtiene login, password, id_estado_usuario, ldap, id_estado_password (String, String, int, boolean, int) respectivamente
query_usuario=SELECT u.login, u.password, eu.id_estado, u.ldap, ep.id_estado, u.id_usuario, u.fecha_bloqueo_password FROM usuario u JOIN estado_usuario eu ON(u.id_estado_usuario = eu.id_estado) JOIN estado_password ep ON (u.id_estado_password = ep.id_estado) WHERE u.login = ?;
# Consulta que permite obtener los roles del usuario usando como entrada el nombre del usuario la salida es:
#id rol
#nombre rol
query_roles=SELECT r.id_rol, r.nombre FROM rol r LEFT JOIN rol_usuario ru ON (ru.id_rol = r.id_rol) LEFT JOIN usuario u ON (ru.id_usuario = u.id_usuario) WHERE u.login = ?;
#Se encarga de consultar el rol padre de un rol recibido, utilizando el id del rol hijo como entrada. las salidas son:
#id rol
#nombre rol
query_rol_padre=SELECT r2.id_rol, r2.nombre FROM rol r JOIN rol r2 ON (r.id_rol_padre = r2.id_rol) WHERE r.id_rol = ?;
#Consulta la division logica de los roles en grupos, recibe el id del rol y devuelve la lista de los nombre de los grupos a los que esta asociado
query_grupos=SELECT g.nombre FROM grupo g JOIN grupo_rol gr ON (g.id_grupo = gr.id_grupo) JOIN rol r ON (gr.id_rol = r.id_rol) WHERE r.id_rol = ?;
#Query que permite consultar el valro de un parametro de sistema por su nombre asignado
query_parametro=SELECT p.valor_parametro_seguridad FROM parametro_seguridad p WHERE p.nombre_parametro_seguridad = ?;
query_aplicacion_rol=SELECT DISTINCT(a.nombre_aplicacion) FROM aplicacion a JOIN recurso r ON (r.id_aplicacion = a.id_aplicacion) JOIN recurso_operacion ro ON (ro.id_recurso = r.id_recurso) JOIN permiso_recurso_operacion pro ON (pro.id_recurso_operacion = ro.id_recurso_operacion) JOIN rol rol ON (rol.id_rol = pro.id_rol) WHERE rol.id_rol = ?;
#nombre del parametro de sistema utilizado para consultar que tantos niveles de roles se deben usar
nombre_parametro_jerarquia=NIVELES_HERENCIA_ROLES
#Algoritmo utlizado para encriptar las contraseñas. Posibles valores:
# SHA512
# MD5
# SHA256
algoritmo_hashing=SHA512
#conjunto de caracteres en los que se debe devolver la contraseña encriptada. Posibles valores:
# base64
# hex
codificador=base64
#Metodo utilizado para codificar la contraseña. Para el caso de contraseñas SHA-512 es relevante ya que dentro del conjunto de caracteres devueltos se inserta un enter o no dependiendo del metodo. Posibles valores:
# bind: utiliza la libreria "jaxb-api" NO inserta el salto de linea en la codificacion
# picketbox: Utiliza la libreria "picketbox" SI inserta el salto de linea en la codificacion
metodo_encoder=bind
#LDAP
#nombre de los parámetros de sistema de donde se consultan los argumentos de conexión al LDAP
#Path del LDAP donde se encuentran los usuarios del sistema
path_usuarios=USERS_PATH
#Nombre del parámetro donde se almacena la implementación del contexto utilizada para la conexión al LDAP
initial_context=INITIAL_CONTEXT_FACTORY
#Nombre del parametro de sistema que almacena la URL de conexion del ldap
provider_url=PROVIDER_URL
#Nombre del parámetro que almacena el método de autenticación del ldap
security_authentication=SECURITY_AUTHENTICATION

#SCript que permite registrar un ingreso fallido del usuario
script_registrar_ingreso=INSERT INTO ingreso_usuario(id_usuario,fecha_inicio,fecha_cierre,ip_equipo,id_estado_ingreso,id_aplicacion) VALUES (?, ?, ?, ?, ?, (SELECT id_aplicacion FROM aplicacion WHERE nombre_aplicacion = ?));
#Nombre del parámetro que consulta la cantidad de intentos fallidos permitidos
nombre_parametro_cantidad_intentos_fallidos=CANTIDAD_INTENTOS_FALLIDOS_PW
#Nombre del parametro que consulta si es desbloqueo automatico o no
desbloqueo_pw_automatico=DESBLOQUEO_PW_AUTOMATICO
#Nombre del parametro para saber el nuemro de horas para el desbloqueo
cantidad_horas_vigenciabloqueo_pw=CANTIDAD_HORAS_VIGENCIA_BLOQUEO_PW
#Nombre del parámetro que consulta el tiempo de conteo de la cantidad de intentos fallidos permitidos
nombre_parametro_horas_intentos_fallidos=CANTIDAD_HORAS_VALIDA_INTENTOS_FALLIDOS_PW
#Script que permite consultar la cantidad de ingresos fallidos
query_ingresos_fallidos=SELECT COUNT(iu.id_ingreso_usuario) FROM ingreso_usuario iu WHERE iu.id_ingreso_usuario > (SELECT MAX(id_ingreso_usuario) FROM ingreso_usuario WHERE id_usuario = ? AND id_estado_ingreso = ?) AND fecha_inicio >= ? AND id_usuario = ?;
#Script que permita modificar el estado del password para un usuario
query_mod_password_usuario=UPDATE usuario SET id_estado_password = (SELECT id_estado FROM estado_password WHERE nombre ="Bloqueado"), fecha_bloqueo_password = ? WHERE id_usuario = ?;